name: Keep Render Bot Alive

on:
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: ‚¨áÔ∏è Checkout m√£ ngu·ªìn
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Thi·∫øt l·∫≠p Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: üì¶ C√†i ƒë·∫∑t th∆∞ vi·ªán
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üöÄ Ping endpoint
        id: ping
        run: |
          # Kh·ªüi t·∫°o log file n·∫øu ch∆∞a t·ªìn t·∫°i
          if [ ! -f ping_log.md ]; then
            echo "| Th·ªùi gian | Tr·∫°ng th√°i | Chi ti·∫øt |" > ping_log.md
            echo "|---|---|---|" >> ping_log.md
          fi
          
          # Th·ª±c hi·ªán ping v√† l∆∞u output
          TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S')
          PING_OUTPUT=$(python ping.py 2>&1) || true
          
          # X√°c ƒë·ªãnh tr·∫°ng th√°i t·ª´ output
          if echo "$PING_OUTPUT" | grep -q "200 OK"; then
            echo "status=success" >> $GITHUB_OUTPUT
            STATUS="‚úÖ Success"
          else
            echo "status=fail" >> $GITHUB_OUTPUT
            STATUS="‚ùå Fail"
          fi
          
          # L∆∞u log
          echo "| $TIMESTAMP | $STATUS | $PING_OUTPUT |" >> ping_log.md
          
          # Gi·ªØ 30 log g·∫ßn nh·∫•t
          if [ $(wc -l < ping_log.md) -gt 32 ]; then
            head -n 2 ping_log.md > ping_log.tmp
            tail -n 30 ping_log.md >> ping_log.tmp
            mv ping_log.tmp ping_log.md
          fi

      - name: üìä C·∫≠p nh·∫≠t th·ªëng k√™
        run: |
          # T·∫°o file ng·∫Øn g·ªçn cho README
          (head -n 2 ping_log.md && tail -n 30 ping_log.md) > ping_log_short.md
          
          # T√≠nh uptime
          TOTAL=$(grep -c "[‚úÖ‚ùå]" ping_log.md)
          if [ $TOTAL -eq 0 ]; then
            echo "0.00" > uptime_percent.txt
          else
            SUCCESS=$(grep -c "‚úÖ" ping_log.md)
            awk "BEGIN {printf \"%.2f\", ($SUCCESS/$TOTAL)*100}" > uptime_percent.txt
          fi

      - name: üü¢ C·∫≠p nh·∫≠t badge
        run: |
          if [ "${{ steps.ping.outputs.status }}" = "success" ]; then
            echo "![Uptime](https://img.shields.io/badge/uptime-Online-brightgreen)" > uptime_badge.md
          else
            echo "![Uptime](https://img.shields.io/badge/uptime-Offline-red)" > uptime_badge.md
          fi

      - name: üìà V·∫Ω chart
        run: python plot_uptime.py

      - name: üîÑ C·∫≠p nh·∫≠t README
        run: |
          CURRENT_TIME=$(date -u '+%Y-%m-%d %H:%M:%S')
          UPTIME_PERCENT=$(cat uptime_percent.txt)
          LAST_CHECK=$(tail -n 1 ping_log.md | cut -d'|' -f2,3)
          TOTAL_PINGS=$(grep -c "[‚úÖ‚ùå]" ping_log.md)

          {
            echo "<div align=\"center\">"
            echo
            echo "# üö¶ Render Service Status"
            echo
            echo "<!--badge-start-->"
            cat uptime_badge.md
            echo "<!--badge-end-->"
            echo
            echo "**Monitoring:** \`telegram-template-bot.onrender.com\`"
            echo
            echo "| Metric | Value |"
            echo "|:--|:--|"
            echo "| ‚è∞ Last Update | $CURRENT_TIME UTC |"
            echo "| üîÑ Total Pings | $TOTAL_PINGS |"
            echo "| ‚úÖ Uptime (30 l·∫ßn g·∫ßn nh·∫•t) | $UPTIME_PERCENT% |"
            echo "| ‚åõ Ping Interval | 30 ph√∫t |"
            echo "| üì° Last Check |$LAST_CHECK |"
            echo
            echo "</div>"
            echo
            echo "<div align=\"center\">"
            echo
            echo "## üìä Uptime Chart"
            echo "<br/>"
            echo "<picture>"
            echo "<source media=\"(prefers-color-scheme: dark)\" srcset=\"uptime_chart.png\">"
            echo "<source media=\"(prefers-color-scheme: light)\" srcset=\"uptime_chart.png\">"
            echo "<img alt=\"Uptime Chart\" src=\"uptime_chart.png\" style=\"width: 100%; max-width: 600px; height: auto; margin: 8px auto; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); display: block;\">"
            echo "</picture>"
            echo "<br/>"
            echo
            echo "</div>"
            echo
            echo "<details><summary>üìù L·ªãch s·ª≠ Ping (30 l·∫ßn g·∫ßn nh·∫•t)</summary>"
            echo
            echo "<!--ping-log-start-->"
            cat ping_log_short.md
            echo "<!--ping-log-end-->"
            echo
            echo "</details>"
            echo
            echo "<div align=\"center\">"
            echo
            echo "---"
            echo
            echo "<sub>‚ö°Ô∏è Powered by [telebot-monitor](https://github.com/vhd0/telebot-monitor) | üïí C·∫≠p nh·∫≠t m·ªói 30 ph√∫t</sub>"
            echo
            echo "</div>"
          } > README.md

      - name: üíæ Commit thay ƒë·ªïi
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add README.md ping_log.md uptime_badge.md uptime_chart.png
          
          if ! git diff --staged --quiet; then
            git commit -m "ü§ñ C·∫≠p nh·∫≠t uptime [skip ci]" \
              -m "- Th·ªùi gian: $(date -u '+%Y-%m-%d %H:%M:%S') UTC" \
              -m "- Status: ${{ steps.ping.outputs.status }}" \
              -m "- Badge & Chart ƒë√£ c·∫≠p nh·∫≠t"
            git pull --rebase origin main
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
