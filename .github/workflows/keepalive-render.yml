name: Keep Render Bot Alive

on:
  schedule:
    - cron: '*/30 * * * *'  # Ch·∫°y m·ªói 30 ph√∫t
  workflow_dispatch:

jobs:
  ping:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: ‚¨áÔ∏è Checkout m√£ ngu·ªìn
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Thi·∫øt l·∫≠p Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: üì¶ C√†i ƒë·∫∑t th∆∞ vi·ªán
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: üöÄ Ping endpoint
        run: |
          if [ ! -f ping_log.md ]; then
            echo "| Th·ªùi gian | Tr·∫°ng th√°i | Chi ti·∫øt |" > ping_log.md
            echo "|---|---|---|" >> ping_log.md
          fi
          
          PING_OUTPUT=$(timeout 90s python ping.py 2>&1 || echo "‚è∞ Timeout sau 90s")
          
          # Ki·ªÉm tra k·∫øt qu·∫£ cu·ªëi c√πng c·ªßa ping, bao g·ªìm c·∫£ retry th√†nh c√¥ng
          if echo "$PING_OUTPUT" | grep -q "200 OK.*Kh·ªüi ƒë·ªông th√†nh c√¥ng" || echo "$PING_OUTPUT" | grep -q "200 OK.*Ph·∫£n h·ªìi"; then
            STATUS="‚úÖ Success"
            # N·∫øu l√† kh·ªüi ƒë·ªông th√†nh c√¥ng, ghi to√†n b·ªô qu√° tr√¨nh retry v√†o chi ti·∫øt
            if echo "$PING_OUTPUT" | grep -q "200 OK.*Kh·ªüi ƒë·ªông th√†nh c√¥ng"; then
              # Gi·ªØ nguy√™n output ƒë·ªÉ show qu√° tr√¨nh retry
              FINAL_OUTPUT="$PING_OUTPUT"
            else
              # N·∫øu l√† ping b√¨nh th∆∞·ªùng, ch·ªâ l·∫•y d√≤ng cu·ªëi
              FINAL_OUTPUT=$(echo "$PING_OUTPUT" | grep "200 OK")
            fi
          else
            STATUS="‚ùå Fail"
            # N·∫øu th·∫•t b·∫°i, ch·ªâ l·∫•y th√¥ng b√°o l·ªói cu·ªëi c√πng
            FINAL_OUTPUT=$(echo "$PING_OUTPUT" | tail -n 1)
          fi
          
          # Ghi v√†o log ch·ªâ m·ªôt l·∫ßn cho m·ªói l·∫ßn ping
          echo "| $(date -u '+%Y-%m-%d %H:%M:%S') | $STATUS | $FINAL_OUTPUT |" >> ping_log.md
          
          if [ $(wc -l < ping_log.md) -gt 32 ]; then
            head -n 2 ping_log.md > ping_log.tmp
            tail -n 30 ping_log.md >> ping_log.tmp
            mv ping_log.tmp ping_log.md
          fi

      - name: üìä C·∫≠p nh·∫≠t chart v√† th·ªëng k√™
        run: |
          (head -n 2 ping_log.md && tail -n 30 ping_log.md) > ping_log_short.md
          tail -n +3 ping_log.md | tail -n 30 > log_for_chart.txt
          python plot_uptime.py

          TOTAL=$(wc -l < log_for_chart.txt)
          if [ "$TOTAL" -eq 0 ]; then
            UPTIME_PERCENT=0
          else
            # T√≠nh success d·ª±a tr√™n status ‚úÖ, kh√¥ng quan t√¢m s·ªë l·∫ßn retry
            SUCCESS=$(grep -c "‚úÖ" log_for_chart.txt)
            UPTIME_PERCENT=$(awk "BEGIN {printf \"%.2f\", ($SUCCESS/$TOTAL)*100}")
          fi
          echo "$UPTIME_PERCENT" > uptime_percent.txt

      - name: üü¢ T·∫°o badge
        run: |
          # Ki·ªÉm tra status d·ª±a tr√™n tr·∫°ng th√°i ‚úÖ/‚ùå thay v√¨ n·ªôi dung
          LAST_LINE=$(tail -n 1 ping_log.md)
          if echo "$LAST_LINE" | grep -q "‚úÖ"; then
            LAST_STATUS="Online"
            COLOR="brightgreen"
          else
            LAST_STATUS="Offline"
            COLOR="red"
          fi
          echo "![Uptime](https://img.shields.io/badge/uptime-$LAST_STATUS-$COLOR)" > uptime_badge.md

      - name: üîÑ C·∫≠p nh·∫≠t README
        run: |
          CURRENT_TIME=$(date -u '+%Y-%m-%d %H:%M:%S')
          TOTAL_PINGS=$(wc -l < log_for_chart.txt)
          UPTIME_PERCENT=$(cat uptime_percent.txt)
          LAST_CHECK=$(tail -n 1 ping_log.md | cut -d'|' -f2,3)

          {
            echo "<div align=\"center\">"
            echo
            echo "# üö¶ Render Service Status"
            echo
            echo "<!--badge-start-->"
            cat uptime_badge.md
            echo "<!--badge-end-->"
            echo
            echo "**Monitoring:** \`telegram-template-bot.onrender.com\`"
            echo
            echo "| Metric | Value |"
            echo "|:--|:--|"
            echo "| ‚è∞ Last Update | $CURRENT_TIME UTC |"
            echo "| üîÑ Total Pings | $TOTAL_PINGS |"
            echo "| ‚úÖ Uptime (30 l·∫ßn g·∫ßn nh·∫•t) | $UPTIME_PERCENT% |"
            echo "| ‚åõ Ping Interval | 30 ph√∫t |"
            echo "| üì° Last Check |$LAST_CHECK |"
            echo
            echo "</div>"
            echo
            echo "<div align=\"center\">"
            echo
            echo "## üìä Uptime Chart"
            echo "<br/>"
            echo "<picture>"
            echo "<source media=\"(prefers-color-scheme: dark)\" srcset=\"uptime_chart.png\">"
            echo "<source media=\"(prefers-color-scheme: light)\" srcset=\"uptime_chart.png\">"
            echo "<img alt=\"Uptime Chart\" src=\"uptime_chart.png\" style=\"width: 100%; max-width: 600px; height: auto; margin: 8px auto; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); display: block;\">"
            echo "</picture>"
            echo "<br/>"
            echo
            echo "</div>"
            echo
            echo "<details><summary>üìù L·ªãch s·ª≠ Ping (30 l·∫ßn g·∫ßn nh·∫•t)</summary>"
            echo
            echo "<!--ping-log-start-->"
            cat ping_log_short.md
            echo "<!--ping-log-end-->"
            echo
            echo "</details>"
            echo
            echo "<div align=\"center\">"
            echo
            echo "---"
            echo
            echo "<sub>‚ö°Ô∏è Powered by [telebot-monitor](https://github.com/vhd0/telebot-monitor) | üïí C·∫≠p nh·∫≠t m·ªói 30 ph√∫t</sub>"
            echo
            echo "</div>"
          } > README.md.new

          mv README.md.new README.md

      - name: üíæ Commit thay ƒë·ªïi
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          git add README.md ping_log.md uptime_badge.md uptime_chart.png

          if ! git diff --staged --quiet; then
            git commit -m "ü§ñ C·∫≠p nh·∫≠t uptime [skip ci]" -m "- Th·ªùi gian: $(date -u '+%Y-%m-%d %H:%M:%S') UTC" -m "- Badge & Chart ƒë√£ c·∫≠p nh·∫≠t" -m "- Log m·ªõi ƒë√£ th√™m"
            git pull --rebase origin main
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
